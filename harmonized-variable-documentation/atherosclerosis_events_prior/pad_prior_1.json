{
  "name": "pad_prior_1",
  "phenotype_concept": "pad_prior",
  "concept_variant": 1,
  "description": "An indicator of whether a subject had peripheral arterial disease prior to the baseline visit.",
  "version": 1,
  "dcc_harmonization_id": 170,
  "data_type": "encoded",
  "measurement_units": "pad_prior",
  "has_age_variable": true,
  "date_harmonized": "2019-10-31 16:35:19",
  "dcc_harmonization_comments": "This variable was harmonized by appropriately converting component variables to a binary variable indicating the presence or absence of PAD before the baseline visit. Component variables included could indicate presence or absence of PAD either by self-report or by study adjudication. If a study recorded multiple events, the DCC harmonized only the earliest event prior to baseline. Unless otherwise stated, the age variable accompanying this variable represents the study participants' age when history of PAD was recorded, _not_ the age at which PAD occurred.\n\n\n### Study-specific comments\n\n#### JHS\nPAD was determined by calculating the ankle-brachial index (ABI) from six total blood pressure measurements: two from the arm and four from the ankle. ABI was determined by dividing the maximum blood pressure of the arm by the maximum blood pressure of the ankle.  A subject was coded as \"1\" for prior PAD if the calculated ABI value was less than 0.9.\n\n#### FHS\n*_FHS_* uses intermittent claudication to determine PAD. The age variable accompanying this variable represents the age at which the PAD diagnosis occurred, not the age when the history of PAD was recorded. \n\n### Reporting method for component study variables\nThe table below shows the reporting method (self-reported or adjudicated by the study) for component study variables from each study included in this harmonized variable.\n\n| Study or subcohort | Self-report or Adjudicated|\n|---------|----------|\n| FHS | Adjudicated|\n| MESA | Self-report |\n| JHS | Self-report |\n| ARIC | Self-report |\n| CHS | Both |\n| COPDGene | Self-report |\n| WHI | Self-report |\n\n",
  "encoded_values": [
    {
      "code": "0",
      "value": "Did not have a history of PAD before baseline"
    },
    {
      "code": "1",
      "value": "Had a history of PAD before baseline"
    }
  ],
  "controlled_vocabulary": [
    {
      "source": "UMLS",
      "version": "2019AA",
      "id": "C0085096"
    }
  ],
  "harmonization_units": [
    {
      "name": "ARIC",
      "component_study_variables": ["phs000280.v5.pht004063.v2.phv00204712.v1", "phs000280.v5.pht004063.v2.phv00204795.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  library(magrittr)\n\n  dataset <- plyr::join_all(phen_list$source_data) %>%\n    rename(age = V1AGE01, pad_prior = PAD02)\n\n  dataset$pad_prior[dataset$pad_prior %in% 'T'] <- NA\n\n  # Convert age to numeric and pad_prior to character.\n  dataset$age <- as.numeric(dataset$age)\n  dataset$pad_prior <- as.character(dataset$pad_prior)\n\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "CHS",
      "component_study_variables": ["phs000287.v6.pht001452.v1.phv00100330.v1", "phs000287.v6.pht001452.v1.phv00100333.v1", "phs000287.v6.pht001452.v1.phv00100487.v1", "phs000287.v6.pht001452.v1.phv00100507.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Filter out rows where all phenotype rows are missing.\n  dat <- filter(phen_list$source_data$pht001452, !(is.na(CLBLMOD) & is.na(ABTLEG) &\n                                                   is.na(EXTART))) %>%\n    # Convert all variables to numeric\n    mutate_if(is.character, as.numeric) %>%\n    # Rename age and calculate PAD variable.\n    transmute(topmed_subject_id, age = as.numeric(AGEBL),\n                   pad_prior = data.frame(CLBLMOD, ABTLEG, EXTART) %>%\n                               rowSums(na.rm = TRUE) %>%\n                               as.logical() %>%\n                               as.integer() %>%\n                               as.character()) %>%\n    # Exclude rows with missing data.\n    na.omit()\n  return(dat)\n}\n"
    },
    {
      "name": "COPDGene",
      "component_study_variables": ["phs000179.v5.pht002239.v4.phv00159618.v4", "phs000179.v5.pht002239.v4.phv00159836.v4"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  library(magrittr)\n\n  dataset <- phen_list$source_data$pht002239 %>%\n    rename(age = Age_Enroll, pad_prior = PeriphVascular)\n\n  # Convert age to numeric and pad_prior to character.\n  dataset$age <- as.numeric(dataset$age)\n  dataset$pad_prior <- as.character(dataset$pad_prior)\n\n  # Remove NAs.\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "FHS",
      "component_study_variables": ["phs000007.v30.pht000309.v13.phv00036469.v12", "phs000007.v30.pht000309.v13.phv00036471.v12", "phs000007.v30.pht003099.v5.phv00177930.v5", "phs000007.v30.pht003316.v7.phv00190817.v7", "phs000007.v30.pht003316.v7.phv00190823.v7"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n    library(dplyr)\n    source_data <- phen_list$source_data\n\n    # Join datasets.\n    dat <- full_join(source_data$pht003099, source_data$pht000309, by = \"topmed_subject_id\") %>%\n\n      # Convert age to numeric.\n      transmute(topmed_subject_id,\n                cad_followup_start_age = as.numeric(age1),\n                event = as.numeric(EVENT),\n                date = as.numeric(DATE))\n\n    # Create pad_prior variable. Gather all pad_prior events.\n    dat$pad_prior <- replicate(length(dat$event), 0)\n    dat$pad_prior  <- case_when(\n      dat$event == 30 ~ 1,\n      dat$event != 30 ~ 0,\n      is.na(dat$event) ~ NA_real_\n    )\n\n    # Calculate age at event.\n    dat$age_at_event <- replicate(length(dat$event), 0)\n    dat$age_at_event <- floor(dat$cad_followup_start_age + (dat$date / 365.25))\n\n    # Identify prior pad events.\n    dat <- dat %>%\n      mutate(pad_prior = case_when(pad_prior == 1 & date <= 0 ~ 1,\n                                   pad_prior == 1 & date > 0 ~ 0,\n                                   TRUE ~ pad_prior))\n\n    # Find subjects with multiple pad events and select first pad event.\n    pad_event <- dat %>%\n      filter(pad_prior == 1) %>%\n      arrange(topmed_subject_id, date) %>%\n      distinct(topmed_subject_id, .keep_all = TRUE) %>%\n      select(-event)\n\n    # Gather all non-pad-event subjects.\n    non_pad_event <- dat %>%\n      filter(pad_prior == 0) %>%\n      select(-event)\n\n    # Gather all non-event subjects from surv dataset.\n    dat2 <- full_join(source_data$pht003099, source_data$pht003316, by = \"topmed_subject_id\") %>%\n      transmute(topmed_subject_id,\n                cad_followup_start_age = as.numeric(age1),\n                cvd_status = as.numeric(cvd),\n                date = as.numeric(cvddate))\n\n    # Create a non-event specific dataset and remove duplicates.\n    non_event <- dat2 %>%\n      filter(cvd_status == 0) %>%\n      arrange(topmed_subject_id, desc(date)) %>%\n      distinct(topmed_subject_id, .keep_all = TRUE) %>%\n      select(-cvd_status)\n\n    # Create a pad_prior variable for non-event subjects.\n    non_event$pad_prior <- 0\n\n    # Create an age at censoring variable for non-event subjects.\n    non_event$age_at_event <-\n      non_event$cad_followup_start_age + (non_event$date / 365.25)\n\n    # Bind non_event and non_pad_event datasets and remove duplicates.\n    non_event_all <- rbind(non_event, non_pad_event) %>%\n      arrange(topmed_subject_id, desc(date)) %>%\n      distinct(topmed_subject_id, .keep_all = TRUE)\n\n    # Combine all pad-event subjects with non-pad-event subjects.\n    dat_combined <- bind_rows(pad_event, non_event_all) %>%\n      arrange(topmed_subject_id, desc(pad_prior)) %>%\n\n      # Remove duplicate subjects with multiple events.\n      distinct(topmed_subject_id, .keep_all = TRUE) %>%\n      transmute(topmed_subject_id, pad_prior = as.character(pad_prior), age = age_at_event) %>%\n      na.omit()\n\n    return(dat_combined)\n\n}\n"
    },
    {
      "name": "JHS",
      "component_study_variables": ["phs000286.v5.pht001921.v1.phv00124562.v1", "phs000286.v5.pht001921.v1.phv00124563.v1", "phs000286.v5.pht001921.v1.phv00124564.v1", "phs000286.v5.pht001921.v1.phv00124565.v1", "phs000286.v5.pht001921.v1.phv00124566.v1", "phs000286.v5.pht001921.v1.phv00124567.v1", "phs000286.v5.pht001949.v1.phv00126009.v1"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  library(dplyr)\n  library(magrittr)\n\n  dataset <- plyr::join_all(phen_list$source_data) %>%\n    rename(age = AGE01) %>%\n    mutate_if(is.character, as.numeric)\n\n  # Take max of the 4 BP measurements from the ankle.\n  ankle <- c(\"ABBA9\", \"ABBA10\", \"ABBA8\", \"ABBA11\")\n\n  dataset$max_ankle <- apply(dataset[, ankle],\n                                 1,\n                                 function(x) ifelse(all(is.na(x)),\n                                                    NA,\n                                                    max(x, na.rm = TRUE)))\n\n  # Take max of the 2 BP measurements from the arm.\n  arm <- c(\"ABBA7\", \"ABBA12\")\n\n  dataset$max_arm <- apply(dataset[, arm],\n                                1,\n                                function(x) ifelse(all(is.na(x)),\n                                                    NA,\n                                                    max(x, na.rm = TRUE)))\n\n  # Calculate ABI\n  dataset$abi <- dataset$max_ankle / dataset$max_arm\n\n  # Derive prevalent PAD from ABI calculation (PAD is defined by an ABI < 0.9)\n  dataset$pad_prior <- as.character(as.integer(dataset$abi < 0.9))\n\n  dataset <- dataset %>%\n    select(topmed_subject_id, age, pad_prior)\n\n  # Convert pad_prior to character and age to numeric.\n  dataset$age <- as.numeric(dataset$age)\n\n  dataset <- na.omit(dataset)\n\n  return(dataset)\n}\n"
    },
    {
      "name": "MESA",
      "component_study_variables": ["phs000209.v13.pht001116.v10.phv00084442.v3"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  # Convert age to numeric and set all participants to 0.\n  dat <- transmute(phen_list$source_data$pht001116, topmed_subject_id, age = as.numeric(age1c),\n                   pad_prior = \"0\")\n  return(dat)\n}\n"
    },
    {
      "name": "WHI",
      "component_study_variables": ["phs000200.v11.pht000998.v6.phv00078436.v6", "phs000200.v11.pht000998.v6.phv00078437.v6", "phs000200.v11.pht000999.v6.phv00078507.v6", "phs000200.v11.pht000999.v6.phv00078562.v6"],
      "component_harmonized_variables": [],
      "harmonization_function": "harmonize <- function(phen_list){\n  source_data <- phen_list$source_data\n  # Join Form 2 data with Form 30 data\n  dat <- full_join(source_data$pht000998, source_data$pht000999, \"topmed_subject_id\") %>%\n    # Set positive F2DAYS values to 0.\n    mutate_at(vars(F2DAYS), function(x) case_when(x > 0 ~ 0, TRUE ~ as.numeric(x))) %>%\n    # Calculate age, rename PAD variable, and drop remaining variables.\n    transmute(age = as.numeric(AGE) + (as.numeric(F30DAYS) + abs(F2DAYS)) / 365.25,\n              pad_prior = PAD, topmed_subject_id) %>%\n    # Exclude rows with missing data.\n    na.omit()\n  return(dat)\n}\n"
    }
  ]
}
